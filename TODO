- refactor the visualizer in at least 3 parts
  - the map_shower that will just print the map (the core visualizer), make
    it so it can be used by the future map_editor
  - the map_compressor that will compress the map to fit a smaller grid than
    the default grid (it should be possible to use it in the map_editor too,
	to reverse it [meaning keep the original informations], and be modified
	by the user)
  - and a new function to remove unused rooms (just add a "used" state to
    the rooms), in fact, just make it an option of the visualizer (if the
	command is used in the map file it should also be possible to do that
	in the map editor)
- make map compression a parameter to be set
  - where 0% will be the original grid 100% will be the smallest
    grid possible, and every grid sizes will be in between
  - this could be done with two map compression parameters, one
    for the width and one for the height, this will be good for
    the map editor
- when the map is still too big, try to only print used rooms,
  and eventually also compress the map
- maybe stack the room collisions in compress coordinates to give priority
  to original coordinates
- draw all the links before the rooms (so that no link is above a room)
- add a settings menu and a settings file to tweak lemin_tk's behavior
- the map editor
- a map generator
- make it possible to run lemin_tk without providing it a map and to select
  the map and solver from a menu
- a checker to see if the solution is valid
